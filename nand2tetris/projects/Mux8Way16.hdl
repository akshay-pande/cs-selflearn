// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux4Way16(a=a, b=c, c=e, d=g, sel[0]=sel[1], sel[1]=sel[2], out=muxA);
	Mux4Way16(a=b, b=d, c=f, d=h, sel[0]=sel[1], sel[1]=sel[2], out=muxB);
	
	Not(in=sel[0], out=notsel);
	And16(a=muxA, b[0]=notsel,b[1]=notsel,b[2]=notsel,b[3]=notsel,b[4]=notsel,b[5]=notsel,b[6]=notsel,b[7]=notsel,b[8]=notsel,b[9]=notsel,b[10]=notsel,b[11]=notsel,b[12]=notsel,b[13]=notsel,b[14]=notsel,b[15]=notsel,out=path1);
	And16(a=muxB, b[0]=sel[0],b[1]=sel[0],b[2]=sel[0],b[3]=sel[0],b[4]=sel[0],b[5]=sel[0],b[6]=sel[0],b[7]=sel[0],b[8]=sel[0],b[9]=sel[0],b[10]=sel[0],b[11]=sel[0],b[12]=sel[0],b[13]=sel[0],b[14]=sel[0],b[15]=sel[0],out=path2);
	
	Or16(a=path1, b=path2, out=out);
	
}